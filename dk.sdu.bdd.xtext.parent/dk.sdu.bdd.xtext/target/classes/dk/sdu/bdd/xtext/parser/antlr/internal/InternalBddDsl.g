/*
 * generated by Xtext 2.32.0
 */
grammar InternalBddDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package dk.sdu.bdd.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.bdd.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.bdd.xtext.services.BddDslGrammarAccess;

}

@parser::members {

 	private BddDslGrammarAccess grammarAccess;

    public InternalBddDslParser(TokenStream input, BddDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BddDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='model'
			{
				newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getModelRefsModelRefParserRuleCall_1_0_0());
					}
					lv_modelRefs_2_0=ruleModelRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"modelRefs",
							lv_modelRefs_2_0,
							"dk.sdu.bdd.xtext.BddDsl.ModelRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getDeclarativeEntityDefDeclarativeEntityDefParserRuleCall_1_1_0());
					}
					lv_declarativeEntityDef_3_0=ruleDeclarativeEntityDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"declarativeEntityDef",
							lv_declarativeEntityDef_3_0,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getImperativeEntityDefImperativeEntityDefParserRuleCall_1_2_0());
					}
					lv_imperativeEntityDef_4_0=ruleImperativeEntityDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"imperativeEntityDef",
							lv_imperativeEntityDef_4_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getScenariosScenarioParserRuleCall_1_3_0());
					}
					lv_scenarios_5_0=ruleScenario
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"scenarios",
							lv_scenarios_5_0,
							"dk.sdu.bdd.xtext.BddDsl.Scenario");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleModelRef
entryRuleModelRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRefRule()); }
	iv_ruleModelRef=ruleModelRef
	{ $current=$iv_ruleModelRef.current; }
	EOF;

// Rule ModelRef
ruleModelRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='using'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelRefAccess().getUsingKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getModelRefAccess().getModelRefModelCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeclarativeEntityDef
entryRuleDeclarativeEntityDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityDefRule()); }
	iv_ruleDeclarativeEntityDef=ruleDeclarativeEntityDef
	{ $current=$iv_ruleDeclarativeEntityDef.current; }
	EOF;

// Rule DeclarativeEntityDef
ruleDeclarativeEntityDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='declarative'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclarativeEntityDefAccess().getDeclarativeKeyword_0());
		}
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarativeEntityDefAccess().getEntityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDeclarativeEntityDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarativeEntityDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='-'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeclarativeEntityDefAccess().getHyphenMinusKeyword_3_0());
			}
			this_ID_4=RULE_ID
			{
				newLeafNode(this_ID_4, grammarAccess.getDeclarativeEntityDefAccess().getIDTerminalRuleCall_3_1());
			}
		)?
		(
			otherlv_5='is'
			{
				newLeafNode(otherlv_5, grammarAccess.getDeclarativeEntityDefAccess().getIsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeclarativeEntityDefRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getDeclarativeEntityDefAccess().getSuperEntitiesDeclarativeEntityDefCrossReference_4_1_0());
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getDeclarativeEntityDefAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDeclarativeEntityDefRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getDeclarativeEntityDefAccess().getSuperEntitiesDeclarativeEntityDefCrossReference_4_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getDeclarativeEntityDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_10='actions:'
			{
				newLeafNode(otherlv_10, grammarAccess.getDeclarativeEntityDefAccess().getActionsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getActionsActionDefParserRuleCall_6_1_0());
					}
					lv_actions_11_0=ruleActionDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
						}
						add(
							$current,
							"actions",
							lv_actions_11_0,
							"dk.sdu.bdd.xtext.BddDsl.ActionDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDeclarativeEntityDefAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getActionsActionDefParserRuleCall_6_2_1_0());
						}
						lv_actions_13_0=ruleActionDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
							}
							add(
								$current,
								"actions",
								lv_actions_13_0,
								"dk.sdu.bdd.xtext.BddDsl.ActionDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_14='states:'
			{
				newLeafNode(otherlv_14, grammarAccess.getDeclarativeEntityDefAccess().getStatesKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getStatesStateDefParserRuleCall_7_1_0());
					}
					lv_states_15_0=ruleStateDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
						}
						add(
							$current,
							"states",
							lv_states_15_0,
							"dk.sdu.bdd.xtext.BddDsl.StateDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getDeclarativeEntityDefAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getStatesStateDefParserRuleCall_7_2_1_0());
						}
						lv_states_17_0=ruleStateDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
							}
							add(
								$current,
								"states",
								lv_states_17_0,
								"dk.sdu.bdd.xtext.BddDsl.StateDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_18='properties:'
			{
				newLeafNode(otherlv_18, grammarAccess.getDeclarativeEntityDefAccess().getPropertiesKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getPropertiesPropertyDefParserRuleCall_8_1_0());
					}
					lv_properties_19_0=rulePropertyDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_19_0,
							"dk.sdu.bdd.xtext.BddDsl.PropertyDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getDeclarativeEntityDefAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDeclarativeEntityDefAccess().getPropertiesPropertyDefParserRuleCall_8_2_1_0());
						}
						lv_properties_21_0=rulePropertyDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeclarativeEntityDefRule());
							}
							add(
								$current,
								"properties",
								lv_properties_21_0,
								"dk.sdu.bdd.xtext.BddDsl.PropertyDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getDeclarativeEntityDefAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleImperativeEntityDef
entryRuleImperativeEntityDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityDefRule()); }
	iv_ruleImperativeEntityDef=ruleImperativeEntityDef
	{ $current=$iv_ruleImperativeEntityDef.current; }
	EOF;

// Rule ImperativeEntityDef
ruleImperativeEntityDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='imperative'
		{
			newLeafNode(otherlv_0, grammarAccess.getImperativeEntityDefAccess().getImperativeKeyword_0());
		}
		otherlv_1='entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getImperativeEntityDefAccess().getEntityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getImperativeEntityDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeEntityDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='-'
			{
				newLeafNode(otherlv_3, grammarAccess.getImperativeEntityDefAccess().getHyphenMinusKeyword_3_0());
			}
			this_ID_4=RULE_ID
			{
				newLeafNode(this_ID_4, grammarAccess.getImperativeEntityDefAccess().getIDTerminalRuleCall_3_1());
			}
		)?
		(
			otherlv_5='is'
			{
				newLeafNode(otherlv_5, grammarAccess.getImperativeEntityDefAccess().getIsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImperativeEntityDefRule());
						}
					}
					otherlv_6=RULE_ID
					{
						newLeafNode(otherlv_6, grammarAccess.getImperativeEntityDefAccess().getSuperEntitiesImperativeEntityDefCrossReference_4_1_0());
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getImperativeEntityDefAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImperativeEntityDefRule());
							}
						}
						otherlv_8=RULE_ID
						{
							newLeafNode(otherlv_8, grammarAccess.getImperativeEntityDefAccess().getSuperEntitiesImperativeEntityDefCrossReference_4_2_1_0());
						}
					)
				)
			)*
		)?
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getImperativeEntityDefAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			otherlv_10='actions:'
			{
				newLeafNode(otherlv_10, grammarAccess.getImperativeEntityDefAccess().getActionsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getActionsImperativeActionDefParserRuleCall_6_1_0());
					}
					lv_actions_11_0=ruleImperativeActionDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
						}
						add(
							$current,
							"actions",
							lv_actions_11_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeActionDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getImperativeEntityDefAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getActionsImperativeActionDefParserRuleCall_6_2_1_0());
						}
						lv_actions_13_0=ruleImperativeActionDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
							}
							add(
								$current,
								"actions",
								lv_actions_13_0,
								"dk.sdu.bdd.xtext.BddDsl.ImperativeActionDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_14='states:'
			{
				newLeafNode(otherlv_14, grammarAccess.getImperativeEntityDefAccess().getStatesKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getStatesImperativeStateDefParserRuleCall_7_1_0());
					}
					lv_states_15_0=ruleImperativeStateDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
						}
						add(
							$current,
							"states",
							lv_states_15_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeStateDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getImperativeEntityDefAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getStatesImperativeStateDefParserRuleCall_7_2_1_0());
						}
						lv_states_17_0=ruleImperativeStateDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
							}
							add(
								$current,
								"states",
								lv_states_17_0,
								"dk.sdu.bdd.xtext.BddDsl.ImperativeStateDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_18='properties:'
			{
				newLeafNode(otherlv_18, grammarAccess.getImperativeEntityDefAccess().getPropertiesKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getPropertiesImperativePropertyDefParserRuleCall_8_1_0());
					}
					lv_properties_19_0=ruleImperativePropertyDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
						}
						add(
							$current,
							"properties",
							lv_properties_19_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativePropertyDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getImperativeEntityDefAccess().getCommaKeyword_8_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImperativeEntityDefAccess().getPropertiesImperativePropertyDefParserRuleCall_8_2_1_0());
						}
						lv_properties_21_0=ruleImperativePropertyDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImperativeEntityDefRule());
							}
							add(
								$current,
								"properties",
								lv_properties_21_0,
								"dk.sdu.bdd.xtext.BddDsl.ImperativePropertyDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getImperativeEntityDefAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleImperativeActionDef
entryRuleImperativeActionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeActionDefRule()); }
	iv_ruleImperativeActionDef=ruleImperativeActionDef
	{ $current=$iv_ruleImperativeActionDef.current; }
	EOF;

// Rule ImperativeActionDef
ruleImperativeActionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getImperativeActionDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeActionDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					otherlv_1='and'
					{
						newLeafNode(otherlv_1, grammarAccess.getImperativeActionDefAccess().getAndKeyword_1_0_0_0());
					}
					    |
					otherlv_2='the'
					{
						newLeafNode(otherlv_2, grammarAccess.getImperativeActionDefAccess().getTheKeyword_1_0_0_1());
					}
				)
				this_ID_3=RULE_ID
				{
					newLeafNode(this_ID_3, grammarAccess.getImperativeActionDefAccess().getIDTerminalRuleCall_1_0_1());
				}
			)?
			    |
			this_ID_4=RULE_ID
			{
				newLeafNode(this_ID_4, grammarAccess.getImperativeActionDefAccess().getIDTerminalRuleCall_1_1());
			}
		)
		(
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getImperativeActionDefAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeActionDefAccess().getPrepositionPREPParserRuleCall_2_1_0());
					}
					lv_preposition_6_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeActionDefRule());
						}
						set(
							$current,
							"preposition",
							lv_preposition_6_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getImperativeActionDefAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			otherlv_8='the'
			{
				newLeafNode(otherlv_8, grammarAccess.getImperativeActionDefAccess().getTheKeyword_3_0());
			}
			(
				(
					lv_argument_9_0=RULE_ID
					{
						newLeafNode(lv_argument_9_0, grammarAccess.getImperativeActionDefAccess().getArgumentIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImperativeActionDefRule());
						}
						setWithLastConsumed(
							$current,
							"argument",
							lv_argument_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleActionDef
entryRuleActionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionDefRule()); }
	iv_ruleActionDef=ruleActionDef
	{ $current=$iv_ruleActionDef.current; }
	EOF;

// Rule ActionDef
ruleActionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_1='and'
				{
					newLeafNode(otherlv_1, grammarAccess.getActionDefAccess().getAndKeyword_1_0_0());
				}
				    |
				otherlv_2='the'
				{
					newLeafNode(otherlv_2, grammarAccess.getActionDefAccess().getTheKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				newLeafNode(this_ID_3, grammarAccess.getActionDefAccess().getIDTerminalRuleCall_1_1());
			}
		)?
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getActionDefAccess().getLeftSquareBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionDefAccess().getPrepositionPREPParserRuleCall_2_1_0());
					}
					lv_preposition_5_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionDefRule());
						}
						set(
							$current,
							"preposition",
							lv_preposition_5_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getActionDefAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
		(
			otherlv_7='the'
			{
				newLeafNode(otherlv_7, grammarAccess.getActionDefAccess().getTheKeyword_3_0());
			}
			(
				(
					lv_argument_8_0=RULE_ID
					{
						newLeafNode(lv_argument_8_0, grammarAccess.getActionDefAccess().getArgumentIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionDefRule());
						}
						setWithLastConsumed(
							$current,
							"argument",
							lv_argument_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRulePREP
entryRulePREP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPREPRule()); }
	iv_rulePREP=rulePREP
	{ $current=$iv_rulePREP.current.getText(); }
	EOF;

// Rule PREP
rulePREP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='on'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getOnKeyword_0());
		}
		    |
		kw='of'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getOfKeyword_1());
		}
		    |
		kw='in'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getInKeyword_2());
		}
		    |
		kw='from'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getFromKeyword_3());
		}
		    |
		kw='to'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getToKeyword_4());
		}
		    |
		kw='into'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getIntoKeyword_5());
		}
		    |
		kw='for'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getForKeyword_6());
		}
		    |
		kw='with'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getWithKeyword_7());
		}
		    |
		kw='out'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getOutKeyword_8());
		}
		    |
		kw='off'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getOffKeyword_9());
		}
		    |
		kw='up'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getUpKeyword_10());
		}
		    |
		kw='down'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPREPAccess().getDownKeyword_11());
		}
	)?
;

// Entry rule entryRuleStateDef
entryRuleStateDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateDefRule()); }
	iv_ruleStateDef=ruleStateDef
	{ $current=$iv_ruleStateDef.current; }
	EOF;

// Rule StateDef
ruleStateDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStateDefAccess().getPostiveStateNameParserRuleCall_0_0());
				}
				lv_postive_0_0=ruleStateName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateDefRule());
					}
					set(
						$current,
						"postive",
						lv_postive_0_0,
						"dk.sdu.bdd.xtext.BddDsl.StateName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='/'
			{
				newLeafNode(otherlv_1, grammarAccess.getStateDefAccess().getSolidusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateDefAccess().getNegativeStateNameParserRuleCall_1_1_0());
					}
					lv_negative_2_0=ruleStateName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateDefRule());
						}
						set(
							$current,
							"negative",
							lv_negative_2_0,
							"dk.sdu.bdd.xtext.BddDsl.StateName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleStateName
entryRuleStateName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateNameRule()); }
	iv_ruleStateName=ruleStateName
	{ $current=$iv_ruleStateName.current; }
	EOF;

// Rule StateName
ruleStateName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getStateNameAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_1='and'
				{
					newLeafNode(otherlv_1, grammarAccess.getStateNameAccess().getAndKeyword_1_0_0());
				}
				    |
				otherlv_2='off'
				{
					newLeafNode(otherlv_2, grammarAccess.getStateNameAccess().getOffKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				newLeafNode(this_ID_3, grammarAccess.getStateNameAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRulePropertyDef
entryRulePropertyDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyDefRule()); }
	iv_rulePropertyDef=rulePropertyDef
	{ $current=$iv_rulePropertyDef.current; }
	EOF;

// Rule PropertyDef
rulePropertyDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPropertyDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getPropertyDefAccess().getIDTerminalRuleCall_1());
			}
		)?
	)
;

// Entry rule entryRuleImperativeStateDef
entryRuleImperativeStateDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeStateDefRule()); }
	iv_ruleImperativeStateDef=ruleImperativeStateDef
	{ $current=$iv_ruleImperativeStateDef.current; }
	EOF;

// Rule ImperativeStateDef
ruleImperativeStateDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeStateDefAccess().getPostiveImperativeStateNameParserRuleCall_0_0());
				}
				lv_postive_0_0=ruleImperativeStateName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeStateDefRule());
					}
					set(
						$current,
						"postive",
						lv_postive_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeStateName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='/'
			{
				newLeafNode(otherlv_1, grammarAccess.getImperativeStateDefAccess().getSolidusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeStateDefAccess().getNegativeImperativeStateNameParserRuleCall_1_1_0());
					}
					lv_negative_2_0=ruleImperativeStateName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeStateDefRule());
						}
						set(
							$current,
							"negative",
							lv_negative_2_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeStateName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleImperativeStateName
entryRuleImperativeStateName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeStateNameRule()); }
	iv_ruleImperativeStateName=ruleImperativeStateName
	{ $current=$iv_ruleImperativeStateName.current; }
	EOF;

// Rule ImperativeStateName
ruleImperativeStateName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getImperativeStateNameAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeStateNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				otherlv_1='and'
				{
					newLeafNode(otherlv_1, grammarAccess.getImperativeStateNameAccess().getAndKeyword_1_0_0());
				}
				    |
				otherlv_2='off'
				{
					newLeafNode(otherlv_2, grammarAccess.getImperativeStateNameAccess().getOffKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				newLeafNode(this_ID_3, grammarAccess.getImperativeStateNameAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleImperativePropertyDef
entryRuleImperativePropertyDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativePropertyDefRule()); }
	iv_ruleImperativePropertyDef=ruleImperativePropertyDef
	{ $current=$iv_ruleImperativePropertyDef.current; }
	EOF;

// Rule ImperativePropertyDef
ruleImperativePropertyDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getImperativePropertyDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativePropertyDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			this_ID_1=RULE_ID
			{
				newLeafNode(this_ID_1, grammarAccess.getImperativePropertyDefAccess().getIDTerminalRuleCall_1());
			}
		)?
	)
;

// Entry rule entryRuleScenario
entryRuleScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScenarioRule()); }
	iv_ruleScenario=ruleScenario
	{ $current=$iv_ruleScenario.current; }
	EOF;

// Rule Scenario
ruleScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Scenario:'
		{
			newLeafNode(otherlv_0, grammarAccess.getScenarioAccess().getScenarioKeyword_0());
		}
		(
			(
				lv_scenarioName_1_0=RULE_STRING
				{
					newLeafNode(lv_scenarioName_1_0, grammarAccess.getScenarioAccess().getScenarioNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScenarioRule());
					}
					setWithLastConsumed(
						$current,
						"scenarioName",
						lv_scenarioName_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='Given'
		{
			newLeafNode(otherlv_2, grammarAccess.getScenarioAccess().getGivenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getPreStateEDeclarativeScenarioStateParserRuleCall_3_0());
				}
				lv_preStateE_3_0=ruleDeclarativeScenarioState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"preStateE",
						lv_preStateE_3_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeScenarioState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getImperative1ImperativeScenarioParserRuleCall_4_0());
				}
				lv_imperative1_4_0=ruleImperativeScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"imperative1",
						lv_imperative1_4_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenario");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='When'
		{
			newLeafNode(otherlv_5, grammarAccess.getScenarioAccess().getWhenKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getActionEDeclarativeScenarioActionParserRuleCall_6_0());
				}
				lv_actionE_6_0=ruleDeclarativeScenarioAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"actionE",
						lv_actionE_6_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeScenarioAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getImperative2ImperativeScenarioParserRuleCall_7_0());
				}
				lv_imperative2_7_0=ruleImperativeScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"imperative2",
						lv_imperative2_7_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenario");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_8='Then'
		{
			newLeafNode(otherlv_8, grammarAccess.getScenarioAccess().getThenKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getPreStateE1DeclarativeScenarioStateParserRuleCall_9_0());
				}
				lv_preStateE1_9_0=ruleDeclarativeScenarioState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"preStateE1",
						lv_preStateE1_9_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeScenarioState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getScenarioAccess().getImperative3ImperativeScenarioParserRuleCall_10_0());
				}
				lv_imperative3_10_0=ruleImperativeScenario
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScenarioRule());
					}
					set(
						$current,
						"imperative3",
						lv_imperative3_10_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenario");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleImperativeScenario
entryRuleImperativeScenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeScenarioRule()); }
	iv_ruleImperativeScenario=ruleImperativeScenario
	{ $current=$iv_ruleImperativeScenario.current; }
	EOF;

// Rule ImperativeScenario
ruleImperativeScenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='which'
		{
			newLeafNode(otherlv_0, grammarAccess.getImperativeScenarioAccess().getWhichKeyword_0());
		}
		otherlv_1='means'
		{
			newLeafNode(otherlv_1, grammarAccess.getImperativeScenarioAccess().getMeansKeyword_1());
		}
		otherlv_2='Given'
		{
			newLeafNode(otherlv_2, grammarAccess.getImperativeScenarioAccess().getGivenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeScenarioAccess().getPreStateImperativeScenarioStateParserRuleCall_3_0());
				}
				lv_preState_3_0=ruleImperativeScenarioState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioRule());
					}
					set(
						$current,
						"preState",
						lv_preState_3_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenarioState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='When'
		{
			newLeafNode(otherlv_4, grammarAccess.getImperativeScenarioAccess().getWhenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeScenarioAccess().getActionImperativeScenarioActionParserRuleCall_5_0());
				}
				lv_action_5_0=ruleImperativeScenarioAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioRule());
					}
					set(
						$current,
						"action",
						lv_action_5_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenarioAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='Then'
		{
			newLeafNode(otherlv_6, grammarAccess.getImperativeScenarioAccess().getThenKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeScenarioAccess().getPostStateImperativeScenarioStateParserRuleCall_7_0());
				}
				lv_postState_7_0=ruleImperativeScenarioState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioRule());
					}
					set(
						$current,
						"postState",
						lv_postState_7_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeScenarioState");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrePostWords
entryRulePrePostWords returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrePostWordsRule()); }
	iv_rulePrePostWords=rulePrePostWords
	{ $current=$iv_rulePrePostWords.current.getText(); }
	EOF;

// Rule PrePostWords
rulePrePostWords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='all'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrePostWordsAccess().getAllKeyword());
		}
	)?
;

// Entry rule entryRuleToBeWords
entryRuleToBeWords returns [String current=null]:
	{ newCompositeNode(grammarAccess.getToBeWordsRule()); }
	iv_ruleToBeWords=ruleToBeWords
	{ $current=$iv_ruleToBeWords.current.getText(); }
	EOF;

// Rule ToBeWords
ruleToBeWords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='is'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getToBeWordsAccess().getIsKeyword_0());
		}
		    |
		kw='are'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getToBeWordsAccess().getAreKeyword_1());
		}
		    |
		(
			kw='is'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getToBeWordsAccess().getIsKeyword_2_0());
			}
			kw='not'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getToBeWordsAccess().getNotKeyword_2_1());
			}
		)
		    |
		(
			kw='are'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getToBeWordsAccess().getAreKeyword_3_0());
			}
			kw='not'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getToBeWordsAccess().getNotKeyword_3_1());
			}
		)
	)?
;

// Entry rule entryRuleDeclarativeScenarioState
entryRuleDeclarativeScenarioState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeScenarioStateRule()); }
	iv_ruleDeclarativeScenarioState=ruleDeclarativeScenarioState
	{ $current=$iv_ruleDeclarativeScenarioState.current; }
	EOF;

// Rule DeclarativeScenarioState
ruleDeclarativeScenarioState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarativeScenarioStateAccess().getPrePostWordsParserRuleCall_0());
		}
		rulePrePostWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAccess().getStatesDeclarativeEntityPropertyStatePhraseParserRuleCall_1_0_0());
					}
					lv_states_1_1=ruleDeclarativeEntityPropertyStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_1,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityPropertyStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAccess().getStatesDeclarativeEntityStatePhraseParserRuleCall_1_0_1());
					}
					lv_states_1_2=ruleDeclarativeEntityStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_2,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAccess().getStatesDeclarativeEntityStatePhraseWithPropertyParserRuleCall_1_0_2());
					}
					lv_states_1_3=ruleDeclarativeEntityStatePhraseWithProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_3,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityStatePhraseWithProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='And'
			{
				newLeafNode(otherlv_2, grammarAccess.getDeclarativeScenarioStateAccess().getAndKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAccess().getAndStatesDeclarativeScenarioStateAndParserRuleCall_2_1_0());
					}
					lv_andStates_3_0=ruleDeclarativeScenarioStateAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateRule());
						}
						add(
							$current,
							"andStates",
							lv_andStates_3_0,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeScenarioStateAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDeclarativeScenarioStateAnd
entryRuleDeclarativeScenarioStateAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeScenarioStateAndRule()); }
	iv_ruleDeclarativeScenarioStateAnd=ruleDeclarativeScenarioStateAnd
	{ $current=$iv_ruleDeclarativeScenarioStateAnd.current; }
	EOF;

// Rule DeclarativeScenarioStateAnd
ruleDeclarativeScenarioStateAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarativeScenarioStateAndAccess().getPrePostWordsParserRuleCall_0());
		}
		rulePrePostWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAndAccess().getStatesDeclarativeEntityPropertyStatePhraseParserRuleCall_1_0_0());
					}
					lv_states_1_1=ruleDeclarativeEntityPropertyStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_1,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityPropertyStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAndAccess().getStatesDeclarativeEntityStatePhraseParserRuleCall_1_0_1());
					}
					lv_states_1_2=ruleDeclarativeEntityStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_2,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioStateAndAccess().getStatesDeclarativeEntityStatePhraseWithPropertyParserRuleCall_1_0_2());
					}
					lv_states_1_3=ruleDeclarativeEntityStatePhraseWithProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_3,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityStatePhraseWithProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleImperativeScenarioState
entryRuleImperativeScenarioState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeScenarioStateRule()); }
	iv_ruleImperativeScenarioState=ruleImperativeScenarioState
	{ $current=$iv_ruleImperativeScenarioState.current; }
	EOF;

// Rule ImperativeScenarioState
ruleImperativeScenarioState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImperativeScenarioStateAccess().getPrePostWordsParserRuleCall_0());
		}
		rulePrePostWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAccess().getStatesImperativeEntityPropertyStatePhraseParserRuleCall_1_0_0());
					}
					lv_states_1_1=ruleImperativeEntityPropertyStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_1,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityPropertyStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAccess().getStatesImperativeEntityStatePhraseParserRuleCall_1_0_1());
					}
					lv_states_1_2=ruleImperativeEntityStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_2,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAccess().getStatesImperativeEntityStatePhraseWithPropertyParserRuleCall_1_0_2());
					}
					lv_states_1_3=ruleImperativeEntityStatePhraseWithProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateRule());
						}
						add(
							$current,
							"states",
							lv_states_1_3,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityStatePhraseWithProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_2='And'
			{
				newLeafNode(otherlv_2, grammarAccess.getImperativeScenarioStateAccess().getAndKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAccess().getAndStatesImperativeScenarioStateAndParserRuleCall_2_1_0());
					}
					lv_andStates_3_0=ruleImperativeScenarioStateAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateRule());
						}
						add(
							$current,
							"andStates",
							lv_andStates_3_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeScenarioStateAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImperativeScenarioStateAnd
entryRuleImperativeScenarioStateAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeScenarioStateAndRule()); }
	iv_ruleImperativeScenarioStateAnd=ruleImperativeScenarioStateAnd
	{ $current=$iv_ruleImperativeScenarioStateAnd.current; }
	EOF;

// Rule ImperativeScenarioStateAnd
ruleImperativeScenarioStateAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImperativeScenarioStateAndAccess().getPrePostWordsParserRuleCall_0());
		}
		rulePrePostWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAndAccess().getStatesImperativeEntityPropertyStatePhraseParserRuleCall_1_0_0());
					}
					lv_states_1_1=ruleImperativeEntityPropertyStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_1,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityPropertyStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAndAccess().getStatesImperativeEntityStatePhraseParserRuleCall_1_0_1());
					}
					lv_states_1_2=ruleImperativeEntityStatePhrase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_2,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityStatePhrase");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioStateAndAccess().getStatesImperativeEntityStatePhraseWithPropertyParserRuleCall_1_0_2());
					}
					lv_states_1_3=ruleImperativeEntityStatePhraseWithProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioStateAndRule());
						}
						add(
							$current,
							"states",
							lv_states_1_3,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityStatePhraseWithProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleDeclarativeScenarioAction
entryRuleDeclarativeScenarioAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeScenarioActionRule()); }
	iv_ruleDeclarativeScenarioAction=ruleDeclarativeScenarioAction
	{ $current=$iv_ruleDeclarativeScenarioAction.current; }
	EOF;

// Rule DeclarativeScenarioAction
ruleDeclarativeScenarioAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioActionAccess().getActionsDeclarativeEntityActionParserRuleCall_0_0_0());
					}
					lv_actions_0_1=ruleDeclarativeEntityAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_1,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityAction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioActionAccess().getActionsVerbActionParserRuleCall_0_0_1());
					}
					lv_actions_0_2=ruleVerbAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_2,
							"dk.sdu.bdd.xtext.BddDsl.VerbAction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioActionAccess().getActionsDeclarativeEntityPropertyActionParserRuleCall_0_0_2());
					}
					lv_actions_0_3=ruleDeclarativeEntityPropertyAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_3,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityPropertyAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_1='And'
			{
				newLeafNode(otherlv_1, grammarAccess.getDeclarativeScenarioActionAccess().getAndKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeScenarioActionAccess().getAndActionsDeclarativeScenarioActionAndParserRuleCall_1_1_0());
					}
					lv_andActions_2_0=ruleDeclarativeScenarioActionAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionRule());
						}
						add(
							$current,
							"andActions",
							lv_andActions_2_0,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeScenarioActionAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDeclarativeScenarioActionAnd
entryRuleDeclarativeScenarioActionAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeScenarioActionAndRule()); }
	iv_ruleDeclarativeScenarioActionAnd=ruleDeclarativeScenarioActionAnd
	{ $current=$iv_ruleDeclarativeScenarioActionAnd.current; }
	EOF;

// Rule DeclarativeScenarioActionAnd
ruleDeclarativeScenarioActionAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeScenarioActionAndAccess().getActionsDeclarativeEntityActionParserRuleCall_0_0());
				}
				lv_actions_0_1=ruleDeclarativeEntityAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_1,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityAction");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDeclarativeScenarioActionAndAccess().getActionsVerbActionParserRuleCall_0_1());
				}
				lv_actions_0_2=ruleVerbAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_2,
						"dk.sdu.bdd.xtext.BddDsl.VerbAction");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getDeclarativeScenarioActionAndAccess().getActionsDeclarativeEntityPropertyActionParserRuleCall_0_2());
				}
				lv_actions_0_3=ruleDeclarativeEntityPropertyAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_3,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityPropertyAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeScenarioAction
entryRuleImperativeScenarioAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeScenarioActionRule()); }
	iv_ruleImperativeScenarioAction=ruleImperativeScenarioAction
	{ $current=$iv_ruleImperativeScenarioAction.current; }
	EOF;

// Rule ImperativeScenarioAction
ruleImperativeScenarioAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeScenarioActionAccess().getActionsImperativeEntityActionParserRuleCall_0_0_0());
					}
					lv_actions_0_1=ruleImperativeEntityAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_1,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityAction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioActionAccess().getActionsImperativeVerbActionParserRuleCall_0_0_1());
					}
					lv_actions_0_2=ruleImperativeVerbAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_2,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeVerbAction");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getImperativeScenarioActionAccess().getActionsImperativeEntityPropertyActionParserRuleCall_0_0_2());
					}
					lv_actions_0_3=ruleImperativeEntityPropertyAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_0_3,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityPropertyAction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_1='And'
			{
				newLeafNode(otherlv_1, grammarAccess.getImperativeScenarioActionAccess().getAndKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeScenarioActionAccess().getAndActionsImperativeScenarioActionAndParserRuleCall_1_1_0());
					}
					lv_andActions_2_0=ruleImperativeScenarioActionAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionRule());
						}
						add(
							$current,
							"andActions",
							lv_andActions_2_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeScenarioActionAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleImperativeScenarioActionAnd
entryRuleImperativeScenarioActionAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeScenarioActionAndRule()); }
	iv_ruleImperativeScenarioActionAnd=ruleImperativeScenarioActionAnd
	{ $current=$iv_ruleImperativeScenarioActionAnd.current; }
	EOF;

// Rule ImperativeScenarioActionAnd
ruleImperativeScenarioActionAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeScenarioActionAndAccess().getActionsImperativeEntityActionParserRuleCall_0_0());
				}
				lv_actions_0_1=ruleImperativeEntityAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_1,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityAction");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getImperativeScenarioActionAndAccess().getActionsImperativeVerbActionParserRuleCall_0_1());
				}
				lv_actions_0_2=ruleImperativeVerbAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_2,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeVerbAction");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getImperativeScenarioActionAndAccess().getActionsImperativeEntityPropertyActionParserRuleCall_0_2());
				}
				lv_actions_0_3=ruleImperativeEntityPropertyAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeScenarioActionAndRule());
					}
					add(
						$current,
						"actions",
						lv_actions_0_3,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityPropertyAction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleENTITY_IDENTITY
entryRuleENTITY_IDENTITY returns [String current=null]:
	{ newCompositeNode(grammarAccess.getENTITY_IDENTITYRule()); }
	iv_ruleENTITY_IDENTITY=ruleENTITY_IDENTITY
	{ $current=$iv_ruleENTITY_IDENTITY.current.getText(); }
	EOF;

// Rule ENTITY_IDENTITY
ruleENTITY_IDENTITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='#'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getENTITY_IDENTITYAccess().getNumberSignKeyword_0_0());
			}
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getENTITY_IDENTITYAccess().getINTTerminalRuleCall_0_1());
			}
		)
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getENTITY_IDENTITYAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDeclarativeEntityRef
entryRuleDeclarativeEntityRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityRefRule()); }
	iv_ruleDeclarativeEntityRef=ruleDeclarativeEntityRef
	{ $current=$iv_ruleDeclarativeEntityRef.current; }
	EOF;

// Rule DeclarativeEntityRef
ruleDeclarativeEntityRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='the'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclarativeEntityRefAccess().getTheKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarativeEntityRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDeclarativeEntityRefAccess().getEntityDeclarativeEntityDefCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityRefAccess().getEntityValueENTITY_IDENTITYParserRuleCall_2_0());
				}
				lv_entityValue_2_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityRefRule());
					}
					set(
						$current,
						"entityValue",
						lv_entityValue_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleImperativeEntityRef
entryRuleImperativeEntityRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityRefRule()); }
	iv_ruleImperativeEntityRef=ruleImperativeEntityRef
	{ $current=$iv_ruleImperativeEntityRef.current; }
	EOF;

// Rule ImperativeEntityRef
ruleImperativeEntityRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='the'
		{
			newLeafNode(otherlv_0, grammarAccess.getImperativeEntityRefAccess().getTheKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeEntityRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getImperativeEntityRefAccess().getEntityImperativeEntityDefCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityRefAccess().getEntityValueENTITY_IDENTITYParserRuleCall_2_0());
				}
				lv_entityValue_2_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityRefRule());
					}
					set(
						$current,
						"entityValue",
						lv_entityValue_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleActionRef
entryRuleActionRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRefRule()); }
	iv_ruleActionRef=ruleActionRef
	{ $current=$iv_ruleActionRef.current; }
	EOF;

// Rule ActionRef
ruleActionRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getActionRefRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getActionRefAccess().getActionActionDefCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleImperativeActionRef
entryRuleImperativeActionRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeActionRefRule()); }
	iv_ruleImperativeActionRef=ruleImperativeActionRef
	{ $current=$iv_ruleImperativeActionRef.current; }
	EOF;

// Rule ImperativeActionRef
ruleImperativeActionRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getImperativeActionRefRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getImperativeActionRefAccess().getActionImperativeActionDefCrossReference_0());
			}
		)
	)
;

// Entry rule entryRulePropertyRef
entryRulePropertyRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRefRule()); }
	iv_rulePropertyRef=rulePropertyRef
	{ $current=$iv_rulePropertyRef.current; }
	EOF;

// Rule PropertyRef
rulePropertyRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='the'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertyRefAccess().getTheKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropertyRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPropertyRefAccess().getPropertyPropertyDefCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyRefAccess().getPropertyValueENTITY_IDENTITYParserRuleCall_2_0());
				}
				lv_propertyValue_2_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRefRule());
					}
					set(
						$current,
						"propertyValue",
						lv_propertyValue_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleImperativePropertyRef
entryRuleImperativePropertyRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativePropertyRefRule()); }
	iv_ruleImperativePropertyRef=ruleImperativePropertyRef
	{ $current=$iv_ruleImperativePropertyRef.current; }
	EOF;

// Rule ImperativePropertyRef
ruleImperativePropertyRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='the'
		{
			newLeafNode(otherlv_0, grammarAccess.getImperativePropertyRefAccess().getTheKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativePropertyRefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getImperativePropertyRefAccess().getPropertyImperativePropertyDefCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativePropertyRefAccess().getPropertyValueENTITY_IDENTITYParserRuleCall_2_0());
				}
				lv_propertyValue_2_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativePropertyRefRule());
					}
					set(
						$current,
						"propertyValue",
						lv_propertyValue_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDeclarativeEntityOrPropertyRef
entryRuleDeclarativeEntityOrPropertyRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityOrPropertyRefRule()); }
	iv_ruleDeclarativeEntityOrPropertyRef=ruleDeclarativeEntityOrPropertyRef
	{ $current=$iv_ruleDeclarativeEntityOrPropertyRef.current; }
	EOF;

// Rule DeclarativeEntityOrPropertyRef
ruleDeclarativeEntityOrPropertyRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeclarativeEntityOrPropertyRefAccess().getDeclarativeEntityRefParserRuleCall_0());
		}
		this_DeclarativeEntityRef_0=ruleDeclarativeEntityRef
		{
			$current = $this_DeclarativeEntityRef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeclarativeEntityOrPropertyRefRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getDeclarativeEntityOrPropertyRefAccess().getPropertyPropertyDefCrossReference_1_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarativeEntityOrPropertyRefAccess().getPropertyValueENTITY_IDENTITYParserRuleCall_1_1_0());
					}
					lv_propertyValue_2_0=ruleENTITY_IDENTITY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarativeEntityOrPropertyRefRule());
						}
						set(
							$current,
							"propertyValue",
							lv_propertyValue_2_0,
							"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleDeclarativeEntityStatePhrase
entryRuleDeclarativeEntityStatePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseRule()); }
	iv_ruleDeclarativeEntityStatePhrase=ruleDeclarativeEntityStatePhrase
	{ $current=$iv_ruleDeclarativeEntityStatePhrase.current; }
	EOF;

// Rule DeclarativeEntityStatePhrase
ruleDeclarativeEntityStatePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseAccess().getEntityDeclarativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityStatePhraseRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseAccess().getToBeWordsParserRuleCall_1());
		}
		ruleToBeWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarativeEntityStatePhraseRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDeclarativeEntityStatePhraseAccess().getStateStateNameCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeclarativeEntityStatePhraseWithProperty
entryRuleDeclarativeEntityStatePhraseWithProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyRule()); }
	iv_ruleDeclarativeEntityStatePhraseWithProperty=ruleDeclarativeEntityStatePhraseWithProperty
	{ $current=$iv_ruleDeclarativeEntityStatePhraseWithProperty.current; }
	EOF;

// Rule DeclarativeEntityStatePhraseWithProperty
ruleDeclarativeEntityStatePhraseWithProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyAccess().getEntityDeclarativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyAccess().getToBeWordsParserRuleCall_1());
		}
		ruleToBeWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDeclarativeEntityStatePhraseWithPropertyAccess().getStateStateNameCrossReference_2_0());
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclarativeEntityStatePhraseWithPropertyAccess().getWithKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyAccess().getPropertyPropertyRefParserRuleCall_4_0());
				}
				lv_property_4_0=rulePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityStatePhraseWithPropertyRule());
					}
					set(
						$current,
						"property",
						lv_property_4_0,
						"dk.sdu.bdd.xtext.BddDsl.PropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeEntityStatePhrase
entryRuleImperativeEntityStatePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityStatePhraseRule()); }
	iv_ruleImperativeEntityStatePhrase=ruleImperativeEntityStatePhrase
	{ $current=$iv_ruleImperativeEntityStatePhrase.current; }
	EOF;

// Rule ImperativeEntityStatePhrase
ruleImperativeEntityStatePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityStatePhraseAccess().getEntityImperativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityStatePhraseRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getImperativeEntityStatePhraseAccess().getToBeWordsParserRuleCall_1());
		}
		ruleToBeWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeEntityStatePhraseRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getImperativeEntityStatePhraseAccess().getStateImperativeStateNameCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeEntityStatePhraseWithProperty
entryRuleImperativeEntityStatePhraseWithProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityStatePhraseWithPropertyRule()); }
	iv_ruleImperativeEntityStatePhraseWithProperty=ruleImperativeEntityStatePhraseWithProperty
	{ $current=$iv_ruleImperativeEntityStatePhraseWithProperty.current; }
	EOF;

// Rule ImperativeEntityStatePhraseWithProperty
ruleImperativeEntityStatePhraseWithProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityStatePhraseWithPropertyAccess().getEntityImperativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityStatePhraseWithPropertyRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getImperativeEntityStatePhraseWithPropertyAccess().getToBeWordsParserRuleCall_1());
		}
		ruleToBeWords
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImperativeEntityStatePhraseWithPropertyRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getImperativeEntityStatePhraseWithPropertyAccess().getStateImperativeStateNameCrossReference_2_0());
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getImperativeEntityStatePhraseWithPropertyAccess().getWithKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityStatePhraseWithPropertyAccess().getPropertyImperativePropertyRefParserRuleCall_4_0());
				}
				lv_property_4_0=ruleImperativePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityStatePhraseWithPropertyRule());
					}
					set(
						$current,
						"property",
						lv_property_4_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativePropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclarativeEntityPropertyStatePhrase
entryRuleDeclarativeEntityPropertyStatePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule()); }
	iv_ruleDeclarativeEntityPropertyStatePhrase=ruleDeclarativeEntityPropertyStatePhrase
	{ $current=$iv_ruleDeclarativeEntityPropertyStatePhrase.current; }
	EOF;

// Rule DeclarativeEntityPropertyStatePhrase
ruleDeclarativeEntityPropertyStatePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseAccess().getPropertyPropertyRefParserRuleCall_0_0());
				}
				lv_property_0_0=rulePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"property",
						lv_property_0_0,
						"dk.sdu.bdd.xtext.BddDsl.PropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseAccess().getPrepositionPREPParserRuleCall_1_0());
				}
				lv_preposition_1_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_1_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseAccess().getEntityDeclarativeEntityRefParserRuleCall_2_0());
				}
				lv_entity_2_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"entity",
						lv_entity_2_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseAccess().getToBeWordToBeWordsParserRuleCall_3_0());
				}
				lv_toBeWord_3_0=ruleToBeWords
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"toBeWord",
						lv_toBeWord_3_0,
						"dk.sdu.bdd.xtext.BddDsl.ToBeWords");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyStatePhraseAccess().getValueENTITY_IDENTITYParserRuleCall_4_0());
				}
				lv_value_4_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeEntityPropertyStatePhrase
entryRuleImperativeEntityPropertyStatePhrase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseRule()); }
	iv_ruleImperativeEntityPropertyStatePhrase=ruleImperativeEntityPropertyStatePhrase
	{ $current=$iv_ruleImperativeEntityPropertyStatePhrase.current; }
	EOF;

// Rule ImperativeEntityPropertyStatePhrase
ruleImperativeEntityPropertyStatePhrase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseAccess().getPropertyImperativePropertyRefParserRuleCall_0_0());
				}
				lv_property_0_0=ruleImperativePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"property",
						lv_property_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativePropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseAccess().getPrepositionPREPParserRuleCall_1_0());
				}
				lv_preposition_1_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_1_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseAccess().getEntityImperativeEntityRefParserRuleCall_2_0());
				}
				lv_entity_2_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"entity",
						lv_entity_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseAccess().getToBeWordToBeWordsParserRuleCall_3_0());
				}
				lv_toBeWord_3_0=ruleToBeWords
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"toBeWord",
						lv_toBeWord_3_0,
						"dk.sdu.bdd.xtext.BddDsl.ToBeWords");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyStatePhraseAccess().getValueENTITY_IDENTITYParserRuleCall_4_0());
				}
				lv_value_4_0=ruleENTITY_IDENTITY
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyStatePhraseRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"dk.sdu.bdd.xtext.BddDsl.ENTITY_IDENTITY");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVerbAction
entryRuleVerbAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerbActionRule()); }
	iv_ruleVerbAction=ruleVerbAction
	{ $current=$iv_ruleVerbAction.current; }
	EOF;

// Rule VerbAction
ruleVerbAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVerbActionAccess().getActionActionRefParserRuleCall_0_0());
				}
				lv_action_0_0=ruleActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerbActionRule());
					}
					set(
						$current,
						"action",
						lv_action_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVerbActionAccess().getPrepositionPREPParserRuleCall_1_0());
				}
				lv_preposition_1_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerbActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_1_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVerbActionAccess().getEntityDeclarativeEntityRefParserRuleCall_2_0());
				}
				lv_entity_2_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerbActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_2_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVerbActionAccess().getPreposition2PREPParserRuleCall_3_0_0());
					}
					lv_preposition2_3_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerbActionRule());
						}
						set(
							$current,
							"preposition2",
							lv_preposition2_3_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVerbActionAccess().getEntity2DeclarativeEntityRefParserRuleCall_3_1_0());
					}
					lv_entity2_4_0=ruleDeclarativeEntityRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerbActionRule());
						}
						set(
							$current,
							"entity2",
							lv_entity2_4_0,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVerbActionAccess().getPreposition3PREPParserRuleCall_4_0_0());
					}
					lv_preposition3_5_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerbActionRule());
						}
						set(
							$current,
							"preposition3",
							lv_preposition3_5_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVerbActionAccess().getEntity3DeclarativeEntityRefParserRuleCall_4_1_0());
					}
					lv_entity3_6_0=ruleDeclarativeEntityRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVerbActionRule());
						}
						set(
							$current,
							"entity3",
							lv_entity3_6_0,
							"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeclarativeEntityAction
entryRuleDeclarativeEntityAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityActionRule()); }
	iv_ruleDeclarativeEntityAction=ruleDeclarativeEntityAction
	{ $current=$iv_ruleDeclarativeEntityAction.current; }
	EOF;

// Rule DeclarativeEntityAction
ruleDeclarativeEntityAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityActionAccess().getEntityDeclarativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityActionAccess().getActionRefActionRefParserRuleCall_1_0());
				}
				lv_actionRef_1_0=ruleActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityActionRule());
					}
					set(
						$current,
						"actionRef",
						lv_actionRef_1_0,
						"dk.sdu.bdd.xtext.BddDsl.ActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityActionAccess().getPrepositionPREPParserRuleCall_2_0());
				}
				lv_preposition_2_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_2_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityActionAccess().getEntity2DeclarativeEntityOrPropertyRefParserRuleCall_3_0());
				}
				lv_entity2_3_0=ruleDeclarativeEntityOrPropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityActionRule());
					}
					set(
						$current,
						"entity2",
						lv_entity2_3_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityOrPropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeclarativeEntityPropertyAction
entryRuleDeclarativeEntityPropertyAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionRule()); }
	iv_ruleDeclarativeEntityPropertyAction=ruleDeclarativeEntityPropertyAction
	{ $current=$iv_ruleDeclarativeEntityPropertyAction.current; }
	EOF;

// Rule DeclarativeEntityPropertyAction
ruleDeclarativeEntityPropertyAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getEntityDeclarativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getActionRefActionRefParserRuleCall_1_0());
				}
				lv_actionRef_1_0=ruleActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"actionRef",
						lv_actionRef_1_0,
						"dk.sdu.bdd.xtext.BddDsl.ActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getPrepositionPREPParserRuleCall_2_0());
				}
				lv_preposition_2_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_2_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getPropertyPropertyRefParserRuleCall_3_0());
				}
				lv_property_3_0=rulePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"property",
						lv_property_3_0,
						"dk.sdu.bdd.xtext.BddDsl.PropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getPreposition2PREPParserRuleCall_4_0());
				}
				lv_preposition2_4_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"preposition2",
						lv_preposition2_4_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarativeEntityPropertyActionAccess().getEntity2DeclarativeEntityRefParserRuleCall_5_0());
				}
				lv_entity2_5_0=ruleDeclarativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarativeEntityPropertyActionRule());
					}
					set(
						$current,
						"entity2",
						lv_entity2_5_0,
						"dk.sdu.bdd.xtext.BddDsl.DeclarativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeVerbAction
entryRuleImperativeVerbAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeVerbActionRule()); }
	iv_ruleImperativeVerbAction=ruleImperativeVerbAction
	{ $current=$iv_ruleImperativeVerbAction.current; }
	EOF;

// Rule ImperativeVerbAction
ruleImperativeVerbAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getActionImperativeActionRefParserRuleCall_0_0());
				}
				lv_action_0_0=ruleImperativeActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
					}
					set(
						$current,
						"action",
						lv_action_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getPrepositionPREPParserRuleCall_1_0());
				}
				lv_preposition_1_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_1_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getEntityImperativeEntityRefParserRuleCall_2_0());
				}
				lv_entity_2_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_2_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getPreposition2PREPParserRuleCall_3_0_0());
					}
					lv_preposition2_3_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
						}
						set(
							$current,
							"preposition2",
							lv_preposition2_3_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getEntity2ImperativeEntityRefParserRuleCall_3_1_0());
					}
					lv_entity2_4_0=ruleImperativeEntityRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
						}
						set(
							$current,
							"entity2",
							lv_entity2_4_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getPreposition3PREPParserRuleCall_4_0_0());
					}
					lv_preposition3_5_0=rulePREP
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
						}
						set(
							$current,
							"preposition3",
							lv_preposition3_5_0,
							"dk.sdu.bdd.xtext.BddDsl.PREP");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImperativeVerbActionAccess().getEntity3ImperativeEntityRefParserRuleCall_4_1_0());
					}
					lv_entity3_6_0=ruleImperativeEntityRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImperativeVerbActionRule());
						}
						set(
							$current,
							"entity3",
							lv_entity3_6_0,
							"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleImperativeEntityAction
entryRuleImperativeEntityAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityActionRule()); }
	iv_ruleImperativeEntityAction=ruleImperativeEntityAction
	{ $current=$iv_ruleImperativeEntityAction.current; }
	EOF;

// Rule ImperativeEntityAction
ruleImperativeEntityAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityActionAccess().getEntityImperativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityActionAccess().getActionRefImperativeActionRefParserRuleCall_1_0());
				}
				lv_actionRef_1_0=ruleImperativeActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityActionRule());
					}
					set(
						$current,
						"actionRef",
						lv_actionRef_1_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityActionAccess().getPrepositionPREPParserRuleCall_2_0());
				}
				lv_preposition_2_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_2_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityActionAccess().getEntity2ImperativeEntityRefParserRuleCall_3_0());
				}
				lv_entity2_3_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityActionRule());
					}
					set(
						$current,
						"entity2",
						lv_entity2_3_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImperativeEntityPropertyAction
entryRuleImperativeEntityPropertyAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImperativeEntityPropertyActionRule()); }
	iv_ruleImperativeEntityPropertyAction=ruleImperativeEntityPropertyAction
	{ $current=$iv_ruleImperativeEntityPropertyAction.current; }
	EOF;

// Rule ImperativeEntityPropertyAction
ruleImperativeEntityPropertyAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getEntityImperativeEntityRefParserRuleCall_0_0());
				}
				lv_entity_0_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"entity",
						lv_entity_0_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getActionRefImperativeActionRefParserRuleCall_1_0());
				}
				lv_actionRef_1_0=ruleImperativeActionRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"actionRef",
						lv_actionRef_1_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeActionRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getPrepositionPREPParserRuleCall_2_0());
				}
				lv_preposition_2_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"preposition",
						lv_preposition_2_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getPropertyImperativePropertyRefParserRuleCall_3_0());
				}
				lv_property_3_0=ruleImperativePropertyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"property",
						lv_property_3_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativePropertyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getPreposition2PREPParserRuleCall_4_0());
				}
				lv_preposition2_4_0=rulePREP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"preposition2",
						lv_preposition2_4_0,
						"dk.sdu.bdd.xtext.BddDsl.PREP");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getImperativeEntityPropertyActionAccess().getEntity2ImperativeEntityRefParserRuleCall_5_0());
				}
				lv_entity2_5_0=ruleImperativeEntityRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImperativeEntityPropertyActionRule());
					}
					set(
						$current,
						"entity2",
						lv_entity2_5_0,
						"dk.sdu.bdd.xtext.BddDsl.ImperativeEntityRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
