/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.bdd.xtext.web;

import com.google.inject.Binder;
import dk.sdu.bdd.xtext.web.resources.BddDslResourceSetProvider;
import dk.sdu.bdd.xtext.web.services.AstServiceDispatcher;
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;
import org.eclipse.xtext.web.server.XtextServiceDispatcher;
import org.eclipse.xtext.web.server.model.IWebResourceSetProvider;
import org.eclipse.xtext.web.server.persistence.FileResourceHandler;
import org.eclipse.xtext.web.server.persistence.IResourceBaseProvider;
import org.eclipse.xtext.web.server.persistence.IServerResourceHandler;

/**
 * Use this class to register additional components to be used within the web application.
 */
@FinalFieldsConstructor
@SuppressWarnings("all")
public class BddDslWebModule extends AbstractBddDslWebModule {
  private final IResourceBaseProvider resourceBaseProvider;

  private final AstServiceDispatcher astProvider;

  public Class<? extends XtextServiceDispatcher> bindXtextServiceDispatcher() {
    return this.astProvider.getClass();
  }

  public Class<? extends IWebResourceSetProvider> bindIWebResourceSetProvider() {
    return BddDslResourceSetProvider.class;
  }

  public void configureIResourceBaseProvider(final Binder binder) {
    if ((this.resourceBaseProvider != null)) {
      binder.<IResourceBaseProvider>bind(IResourceBaseProvider.class).toInstance(this.resourceBaseProvider);
    }
  }

  public Class<? extends IServerResourceHandler> bindIServerResourceHandler() {
    return FileResourceHandler.class;
  }

  public BddDslWebModule(final IResourceBaseProvider resourceBaseProvider, final AstServiceDispatcher astProvider) {
    super();
    this.resourceBaseProvider = resourceBaseProvider;
    this.astProvider = astProvider;
  }
}
